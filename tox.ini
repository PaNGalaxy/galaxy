[tox]
# envlist is the list of environments that are tested when `tox` is run without any option
# hyphens in an environment name are used to delimit factors
envlist = py37-first_startup, py37-lint, py37-lint_docstring_include_list, py37-mypy, py37-reports_startup, py37-unit, test_galaxy_packages, validate_test_tools
skipsdist = True

[testenv]
commands =
    first_startup: bash .ci/first_startup.sh
    lint: bash .ci/flake8_wrapper.sh
    lint_docstring: bash .ci/flake8_wrapper_docstrings.sh --exclude
    lint_docstring_include_list: bash .ci/flake8_wrapper_docstrings.sh --include
    reports_startup: bash .ci/first_startup.sh reports
    unit: bash run_tests.sh -u
    # start with test here but obviously someday all of it...
    mypy: mypy test lib
whitelist_externals = bash
passenv = 
    CI CONDA_EXE
    GALAXY_CONFIG_OVERRIDE_DATABASE_CONNECTION
    APP_WEBSERVER
    TERM
setenv =
    first_startup: GALAXY_PYTHON=python
    first_startup: GALAXY_CONFIG_DATABASE_AUTO_MIGRATE=true
    py{36,37,38}-first_startup: GALAXY_VIRTUAL_ENV=.venv3
    unit: GALAXY_VIRTUAL_ENV={envdir}
    unit: GALAXY_ENABLE_BETA_COMPRESSED_GENBANK_SNIFFING=1
    mulled: GALAXY_TEST_INCLUDE_SLOW=1
    check_indexes: GALAXY_TEST_FORCE_DATABASE_MIGRATION=1
    check_indexes: GALAXY_SKIP_CLIENT_BUILD=1
deps =
    lint,lint_docstring,lint_docstring_include_list,mypy: -rlib/galaxy/dependencies/pinned-lint-requirements.txt
    unit: mock-ssh-server

[testenv:mulled]
commands =  bash run_tests.sh --skip-venv -u test/unit/tool_util/mulled

[testenv:check_py3_compatibility]
commands = bash .ci/check_py3_compatibility.sh

[testenv:check_python_dependencies]
commands = make list-dependency-updates # someday change exit code on this.
whitelist_externals = make

[testenv:mako_count]
commands = bash .ci/check_mako.sh

[testenv:test_galaxy_packages]
commands = bash packages/test.sh

[testenv:test_galaxy_release]
commands = bash test/release.sh

[testenv:validate_test_tools]
commands = bash .ci/validate_test_tools.sh

[testenv:web_controller_line_count]
commands = bash .ci/check_controller.sh

[testenv:check_indexes]
commands = 
    bash scripts/common_startup.sh
    bash create_db.sh
    bash check_model.sh
