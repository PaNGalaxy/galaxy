# generated by datamodel-codegen:
#   filename:  https://raw.githubusercontent.com/ga4gh/data-repository-service-schemas/master/openapi/components/schemas/Checksum.yaml
#   timestamp: 2022-05-21T22:19:07+00:00

from __future__ import annotations

from pydantic import (
    BaseModel,
    Field,
)


class Model(BaseModel):
    checksum: str = Field(..., description="The hex-string encoded checksum for the data")
    type: str = Field(
        ...,
        description="The digest method used to create the checksum.\nThe value (e.g. `sha-256`) SHOULD be listed as `Hash Name String` in the https://www.iana.org/assignments/named-information/named-information.xhtml#hash-alg[IANA Named Information Hash Algorithm Registry]. Other values MAY be used, as long as implementors are aware of the issues discussed in https://tools.ietf.org/html/rfc6920#section-9.4[RFC6920].\nGA4GH may provide more explicit guidance for use of non-IANA-registered algorithms in the future. Until then, if implementors do choose such an algorithm (e.g. because it's implemented by their storage provider), they SHOULD use an existing standard `type` value such as `md5`, `etag`, `crc32c`, `trunc512`, or `sha1`.",
        example="sha-256",
    )
