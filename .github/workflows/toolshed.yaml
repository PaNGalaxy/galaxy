name: Toolshed tests
on:
  push:
    paths-ignore:
      - 'doc/**'
      - 'lib/galaxy_test/selenium/**'
  pull_request:
    paths-ignore:
      - 'doc/**'
      - 'lib/galaxy_test/selenium/**'
env:
  GALAXY_TEST_DBURI: 'postgresql://postgres:postgres@localhost:5432/galaxy?client_encoding=utf8'
  TOOL_SHED_TEST_DBURI: 'postgresql://postgres:postgres@localhost:5432/toolshed?client_encoding=utf8'
concurrency:
  group: toolshed-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    name: Test
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: ['3.7']
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
        with:
          path: 'galaxy root'
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get full Python version
        id: full-python-version
        shell: bash
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
      - name: Cache pip dir
        uses: actions/cache@v1
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: pip-cache-${{ matrix.python-version }}-${{ hashFiles('galaxy root/requirements.txt') }}
      - name: Cache galaxy venv
        uses: actions/cache@v2
        with:
          path: .venv
          key: gxy-venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('galaxy root/requirements.txt') }}-toolshed
      - name: Run tests
        run: './run_tests.sh -toolshed'
        working-directory: 'galaxy root'
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: Toolshed test results (${{ matrix.python-version }})
          path: 'galaxy root/run_toolshed_tests.html'
